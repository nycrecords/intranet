"""empty message

Revision ID: 54b2a0f371f5
Revises: 92a86812ebac
Create Date: 2019-12-27 19:43:22.140559

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '54b2a0f371f5'
down_revision = '92a86812ebac'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('permissions', sa.BigInteger(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=32), nullable=False),
    sa.Column('middle_initial', sa.String(length=1), nullable=True),
    sa.Column('last_name', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=254), nullable=True),
    sa.Column('password', sa.String(length=256), nullable=True),
    sa.Column('expiration_date', sa.DateTime(), nullable=True),
    sa.Column('division', sa.String(), nullable=True),
    sa.Column('title', sa.String(length=64), nullable=True),
    sa.Column('phone_number', sa.String(length=25), nullable=True),
    sa.Column('room', sa.String(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uploader_id', sa.Integer(), nullable=True),
    sa.Column('file_title', sa.String(), nullable=True),
    sa.Column('file_name', sa.String(), nullable=True),
    sa.Column('document_type', sa.Enum('Instructions', 'Policies and Procedures', 'Templates', 'Training Materials', name='document_type'), nullable=True),
    sa.Column('file_type', sa.String(), nullable=True),
    sa.Column('file_path', sa.String(), nullable=True),
    sa.Column('division', sa.Enum('Administration & Human Resources', 'Executive', 'External Affairs', 'Grants Unit', 'Information Technology', 'Legal', 'Municipal Archives', 'Municipal Library', 'Municipal Records Management', 'Operations', name='divisions'), nullable=True),
    sa.Column('last_modified', sa.DateTime(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['uploader_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('password', sa.String(length=256), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('author', sa.Integer(), nullable=True),
    sa.Column('post_type', sa.Enum('news', 'event_posts', 'meeting_notes', name='post_type'), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('content', sa.String(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('visible', sa.Boolean(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['author'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event_posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_date', sa.DateTime(), nullable=True),
    sa.Column('event_location', sa.String(), nullable=True),
    sa.Column('event_leader', sa.String(), nullable=True),
    sa.Column('start_time', sa.String(), nullable=True),
    sa.Column('end_time', sa.String(), nullable=True),
    sa.Column('sponsor', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['posts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('document_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('previous_value', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('new_value', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meeting_notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('meeting_date', sa.DateTime(), nullable=True),
    sa.Column('meeting_location', sa.String(), nullable=True),
    sa.Column('meeting_leader', sa.String(), nullable=True),
    sa.Column('meeting_note_taker', sa.String(), nullable=True),
    sa.Column('start_time', sa.String(), nullable=True),
    sa.Column('end_time', sa.String(), nullable=True),
    sa.Column('attendees', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('next_meeting_date', sa.DateTime(), nullable=True),
    sa.Column('next_meeting_leader', sa.String(), nullable=True),
    sa.Column('next_meeting_note_taker', sa.String(), nullable=True),
    sa.Column('meeting_type', sa.Enum('Division', 'Strategic Planning', 'Senior Staff', 'Project', 'Agency', name='meeting_type'), nullable=True),
    sa.Column('division', sa.Enum('Administration & Human Resources', 'Executive', 'External Affairs', 'Grant Unit', 'Information Technology', 'Legal', 'Municipal Archives', 'Municipal Library', 'Municipal Records Management', 'Operations', name='divisions'), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['posts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('news',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['posts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('news')
    op.drop_table('meeting_notes')
    op.drop_table('events')
    op.drop_table('event_posts')
    op.drop_table('posts')
    op.drop_table('history')
    op.drop_table('documents')
    op.drop_table('users')
    op.drop_table('roles')
    # ### end Alembic commands ###
